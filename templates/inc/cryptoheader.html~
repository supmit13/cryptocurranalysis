<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="description" content="">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <!-- The above 4 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <script language='JavaScript' type="text/javascript" src='static/scripts/analysis.js'></script>
    <meta http-equiv="content-type" content="application/xhtml+xml; charset=utf-8" />
    <meta http-equiv="CACHE-CONTROL" content="NO-CACHE">
    <meta http-equiv="PRAGMA" content="NO-CACHE">
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <!-- Title -->
    <title>CryptoCurry - Cryptocurrency Analysis &amp; Trading Platform</title>

    <!-- Favicon -->
    <link rel="icon" href="static/iface_resources/img/core-img/favicon.ico">

    <!-- Core Stylesheet -->
    <link rel="stylesheet" href="static/iface_resources/style.css">
    <style>
	.semitrans {
	  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=90)";
	  filter: alpha(opacity=90);
	  opacity: 0.9;
	  -moz-opacity: .90; 
	  -khtml-opacity: 0.9;
	  background-color:#669999;
	  color:#FFFFFF;
	  position:absolute; top:250px; left:100px; width:80%; height:150%; text-align:left; vertical-align:middle;padding-left:25px;padding-top:35px;padding-right:50px;
	}

	.semitrans2 {
	  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=90)";
	  filter: alpha(opacity=90);
	  opacity: 0.9;
	  -moz-opacity: .90; 
	  -khtml-opacity: 0.9;
	  background-color:#669999;
	  color:#FFFFFF;
	  position:absolute; top:250px; left:100px; width:80%; height:25%; text-align:left; vertical-align:middle;padding-left:25px;padding-top:35px;padding-right:50px;
	}
    </style>
    <!-- <script type="text/javascript" src="https://www.google.com/jsapi?autoload={'modules':[{'name':'visualization','version':'1.1','packages':['line']}]}"></script> -->
    <script type='text/javascript'>
        google.charts.load('current', {'packages':['line']});
        //google.charts.setOnLoadCallback(drawChart);



function sanitizedataforjs(data){
    // Remove python unicode notation - u''
    upat = /(u\')/g;
    data = data.replace(upat, "'");
    //alert(JSON.stringify(data));
    return(data);
}


function drawChart(data, source="investdb"){
      data = sanitizedataforjs(data);
      //alert(data);
      dataparsed = JSON.parse(data);
      datadict = dataparsed["datadict"];
      //alert(JSON.stringify(datadict));
      plotname = dataparsed["plotname"];
      colors = dataparsed["colors"];
      datetimeslist = dataparsed["datetimeslist"];
      plotareadiv = document.getElementById('plotnamearea');
      currencynames = dataparsed["currencynames"];
      var keys = Object.keys(datadict);
      //alert(keys);
      datalists = [];
      datacurr = [];
      currlist = new Array();
      plotareadiv.innerHTML = "It might take a little while to plot your chart. Please be patient.";
      //alert(source);
      if(source == "investdb"){
          headers_investdb = ["Datetime", "EOS", "BITCOIN", "BINANCE COIN", "BITCOIN SV", "XRP", "TETHER", "STELLAR", "BITCOIN CASH", "ETHEREUM", "MONERO", "NICASH"];
      }
      else if(source == "ohlcv"){
	  headers_ohlcv = ["Datetime", "EOS", "BITCOIN", "BINANCE COIN", "LITECOIN", "XRP", "TETHER", "STELLAR", "BITCOIN CASH", "ETHEREUM", "MONERO", "ETHEREUM CLASSIC", "COSMOS"];
      }
      else if(source == "coinmarketdata"){
	  headers_coinmarketdata = ["Datetime", "EOS", "BITCOIN", "BINANCE COIN", "BITCOIN SV", "XRP", "TETHER", "STELLAR", "BITCOIN CASH", "ETHEREUM", "MONERO", "NICASH"];
      }
      else if(source == "coinmarketcapdata"){
	  headers_coinmarketcapdata = ["Datetime", "EOS", "BITCOIN", "BINANCE COIN", "BITCOIN SV", "XRP", "TETHER", "STELLAR", "BITCOIN CASH", "ETHEREUM", "MONERO", "NICASH"];
      }
      else if(source == "coinbase"){
	  headers_coinbase = ["Datetime", "EOS", "BITCOIN", "BINANCE COIN", "BITCOIN SV", "XRP", "TETHER", "STELLAR", "BITCOIN CASH", "ETHEREUM", "MONERO", "NICASH"];
      }
      else{
	alert("Unrecognized Source.");
      }
      //headers_investdb = ["Datetime", "EOS", "BITCOIN", "BINANCE COIN", "XRP", "TETHER", "STELLAR", "BITCOIN CASH", "ETHEREUM", "MONERO"];
      if(source == "investdb"){
          currflagobj = {"EOS" : 0, "BITCOIN" : 0, "BINANCE COIN" : 0, "XRP" : 0, "TETHER" : 0, "STELLAR" : 0, "BITCOIN CASH" : 0, "ETHEREUM" : 0, "MONERO" : 0, "NICASH" : 0};
      }
      else if(source == "ohlcv"){
	  currflagobj = {"EOS" : 0, "BITCOIN" : 0, "BINANCE COIN" : 0, "XRP" : 0, "TETHER" : 0, "STELLAR" : 0, "BITCOIN CASH" : 0, "ETHEREUM" : 0, "MONERO" : 0, "ETHEREUM CLASSIC" : 0};
      }
      else if(source == "coinmarketdata"){
	  currflagobj = {"EOS" : 0, "BITCOIN" : 0, "BINANCE COIN" : 0, "XRP" : 0, "TETHER" : 0, "STELLAR" : 0, "BITCOIN CASH" : 0, "ETHEREUM" : 0, "MONERO" : 0, "NICASH" : 0};
      }
      else if(source == "coinmarketcapdata"){
	  currflagobj = {"EOS" : 0, "BITCOIN" : 0, "BINANCE COIN" : 0, "XRP" : 0, "TETHER" : 0, "STELLAR" : 0, "BITCOIN CASH" : 0, "ETHEREUM" : 0, "MONERO" : 0, "NICASH" : 0};
      }
      else if(source == "coinbase"){
	  currflagobj = {"EOS" : 0, "BITCOIN" : 0, "BINANCE COIN" : 0, "XRP" : 0, "TETHER" : 0, "STELLAR" : 0, "BITCOIN CASH" : 0, "ETHEREUM" : 0, "MONERO" : 0, "NICASH" : 0};
      }
      else{
	alert("Unrecognized Source.");
      }
      maxdate = new Date("01-01-1970 00:00");
      ctr = 0;
      var plotdata = new google.visualization.DataTable();
      plotdata.addColumn('string', 'Datetime');
      if(source == "investdb"){
          listedcurrencies_investdb = new Array("EOS", "BITCOIN", "BINANCE COIN", "BITCOIN SV", "XRP", "TETHER", "STELLAR", "BITCOIN CASH", "ETHEREUM", "MONERO", "NICASH");
          //listedcurrencies_investdb = new Array("EOS", "BITCOIN", "BINANCE COIN", "XRP", "TETHER", "STELLAR", "BITCOIN CASH", "ETHEREUM", "MONERO");
      }
      else if(source == "ohlcv"){
	  listedcurrencies_ohlcv = new Array("EOS", "BITCOIN", "BINANCE COIN", "LITECOIN", "XRP", "TETHER", "STELLAR", "BITCOIN CASH", "ETHEREUM", "MONERO", "ETHEREUM CLASSIC", "COSMOS");
      }
      else if(source == "coinmarketdata"){
	  listedcurrencies_coinmarketdata = new Array("EOS", "BITCOIN", "BINANCE COIN", "BITCOIN SV", "XRP", "TETHER", "STELLAR", "BITCOIN CASH", "ETHEREUM", "MONERO", "NICASH");
      }  
      else if(source == "coinmarketcapdata"){
	  listedcurrencies_coinmarketcapdata = new Array("EOS", "BITCOIN", "BINANCE COIN", "BITCOIN SV", "XRP", "TETHER", "STELLAR", "BITCOIN CASH", "ETHEREUM", "MONERO", "NICASH");
      }
      else if(source == "coinbase"){
	  listedcurrencies_coinbase = new Array("EOS", "BITCOIN", "BINANCE COIN", "BITCOIN SV", "XRP", "TETHER", "STELLAR", "BITCOIN CASH", "ETHEREUM", "MONERO", "NICASH");
      }
      else{
	alert("Unrecognized Source.");
      }
      if(source == "investdb"){
	      plotdata.addColumn('number', "EOS");
	      plotdata.addColumn('number', "BITCOIN");
	      plotdata.addColumn('number', "BINANCE COIN");
	      plotdata.addColumn('number', "BITCOIN SV");
	      plotdata.addColumn('number', "XRP");
	      plotdata.addColumn('number', "TETHER");
	      plotdata.addColumn('number', "STELLAR");
	      plotdata.addColumn('number', "BITCOIN CASH");
	      plotdata.addColumn('number', "ETHEREUM");
	      plotdata.addColumn('number', "MONERO");
	      plotdata.addColumn('number', "NICASH");
      }
      else if(source == "ohlcv"){
	      plotdata.addColumn('number', "EOS");
	      plotdata.addColumn('number', "BITCOIN");
	      plotdata.addColumn('number', "BINANCE COIN");
	      plotdata.addColumn('number', "LITECOIN");
	      plotdata.addColumn('number', "XRP");
	      plotdata.addColumn('number', "TETHER");
	      plotdata.addColumn('number', "STELLAR");
	      plotdata.addColumn('number', "BITCOIN CASH");
	      plotdata.addColumn('number', "ETHEREUM");
	      plotdata.addColumn('number', "MONERO");
	      plotdata.addColumn('number', "ETHEREUM CLASSIC");
      }
      else if(source == "coinmarketdata"){
      }  
      else if(source == "coinmarketcapdata"){
      }
      else if(source == "coinbase"){
      }
      else{
	alert("Unrecognized Source.");
      }
      datastack = new Object();
	currencyindices = Object.keys(datadict);
        //alert(currencyindices);
        if(source == "investdb"){
	    listedcurrencies = listedcurrencies_investdb;
	}
	else if(source == "ohlcv"){
	    listedcurrencies = listedcurrencies_ohlcv;
	}
	else if(source == "coinmarketdata"){
	    listedcurrencies = listedcurrencies_coinmarketdata;
	}
	else if(source == "coinmarketcapdata"){
	    listedcurrencies = listedcurrencies_coinmarketcapdata;
	}
	else if(source == "coinbase"){
	    listedcurrencies = listedcurrencies_coinbase;
	}
        for(currencyindex in currencyindices){
	    currencyname = currencyindices[currencyindex];
            if(source == "investdb" && listedcurrencies_investdb.indexOf(currencyname.toUpperCase()) == -1){
		continue;
            }
	    if(source == "ohlcv" && listedcurrencies_ohlcv.indexOf(currencyname.toUpperCase()) == -1){
		continue;
            }
	    if(source == "coinmarketdata" && listedcurrencies_coinmarketdata.indexOf(currencyname.toUpperCase()) == -1){
		continue;
            }
	    if(source == "coinmarketcapdata" && listedcurrencies_coinmarketcapdata.indexOf(currencyname.toUpperCase()) == -1){
		continue;
            }
	    if(source == "coinbase" && listedcurrencies_coinbase.indexOf(currencyname.toUpperCase()) == -1){
		continue;
            }
	    //alert(currencyname.toUpperCase());
	    currflagobj[currencyname.toUpperCase()] = 1;
	    curvalslist = datadict[currencyname];
	    rec_ctr = 0;
	    for (entry in curvalslist){
		//alert(JSON.stringify(curvalslist[entry]));
		date = Object.keys(curvalslist[entry])[0];
		value = Object.values(curvalslist[entry])[0];
		    if(datastack[date]){
			datarow = new Array(keys.length); // Just so that javascript is satisfied, as this will be overruled.
			datarow = datastack[date];
			for(j=0;j < listedcurrencies.length; j++){
			    if(currencyname.toUpperCase() == listedcurrencies[j]){
				datarow[j+1] = parseFloat(value);
				datastack[date] = datarow;
				rec_ctr++;
				break;
			    }
			}
		    }
		    else{
			datastack[date] = new Array();
			datarow = new Array(keys.length);
			datarow[0] = date;
			for(j=0;j < listedcurrencies.length; j++){
			    if(currencyname.toUpperCase() == listedcurrencies[j]){
				datarow = new Array(keys.length);
				datarow[0] = date;
				datarow[j + 1] = parseFloat(value);
				datastack[date] = datarow;
				rec_ctr++;
				break;
			    }
			}
		    }
	    }
	}
        for(datetimeval in datetimeslist){
	    datar = datastack[datetimeslist[datetimeval]]
	    //alert(datar);
	    if(datar.length != keys.length){
		//console.log(datar.length);
		//alert(datar.length);
		//alert(keys.length);
		continue;
	    }
	    plotdata.addRow(datar);
	}
	subtitlestr = "in Millions of USD";
	var options = {
	chart : {
  	    title: plotname + " -- " + listedcurrencies.join(", "),
	    subtitle: subtitlestr
	},
  	curveType: "function",
  	legend: { position: "top" },
	colors: colors,
	width: 900,
        height: 500,
        hAxis: {
	    viewWindow: {
            min: new Date(2019, 0, 01, 30),
            max: maxdate
            },
	    format: 'dd-MM-yyyy hh:mm',
            gridlines: {count: 15}
        },
        vAxis: {
            gridlines: {color: 'blue',  count : 15},
            minValue: 0
        }
      };
      //var chart = new google.visualization.LineChart(document.getElementById("plotimage"));
      plotareadiv.innerHTML = ""; // Remove if something was written previously.
      plotareadiv.innerHTML = plotname;
      var chart = new google.charts.Line(document.getElementById("plotimage"));
      try{
          chart.draw(plotdata, options);
      //  chart.draw(plotdata, google.charts.Line.convertOptions(options));
      }
      catch(err){ // Some data will be invalid, you can't do a fuck with it. 
        //(Ummmmm.... please excuse my language, sometimes I behave that way, especially when I am irritated).
        alert("NOT PLOTTING - " + err);
      }
}


function displayplots(indexval, urlprefix, source){
    selectbox = document.getElementById(indexval);
    selectedvalue = selectbox.value;
    //alert(source);
    //alert(selectedvalue);
    postdata = "csrfmiddlewaretoken=" + document.cryptoanalysis.csrfmiddlewaretoken.value;
    plotdiv = document.getElementById('plotimage');
    var xmlhttp;
    if (window.XMLHttpRequest){
        xmlhttp=new XMLHttpRequest();
    }
    else{
        xmlhttp=new ActiveXObject("Microsoft.XMLHTTP");
    }
    //alert(postdata);
    xmlhttp.onreadystatechange = function(){
        if(xmlhttp.readyState == 4 && xmlhttp.status==200){
	    plotdiv.style.display = "block";
	    //plotdiv.innerHTML = "";
	    waittag = document.getElementById('waitprocess');
 	    waittag.parentNode.removeChild(waittag);
	    //imgtag = document.createElement('img');
	    //imgtag.setAttribute('src', xmlhttp.responseText);
	    //plotdiv.appendChild(imgtag);
	    //alert("calling drawchart");
	    data = xmlhttp.responseText;
            if(source == "investdb"){
	        drawChart(data, source);
	    }
	    else if(source == "ohlcv"){
          	drawChart(data, source);
	    }
	    else if(source == "coinmarketdata"){
	    }  
	    else if(source == "coinmarketcapdata"){
	    }
	    else if(source == "coinbase"){
	    }
	    else{
	      alert("Unrecognized Source.");
	    }
        }
    };
    posturl = urlprefix + "/cryptocurry/analyze/visual/" + indexval + "/" + selectedvalue + "/";
    alert("This operation might take a while, depending on the volume of available data on the server. Please be patient.");
    xmlhttp.open('POST', posturl, true);
    xmlhttp.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');
    xmlhttp.setRequestHeader("X-CSRFToken", document.cryptoanalysis.csrfmiddlewaretoken.value);
    //alert(posturl);
    plotdiv.style.display = "block";
    imgtag = document.createElement('img');
    imgtag.setAttribute('src', 'static/images/loading_big.gif');
    imgtag.setAttribute('id', 'waitprocess');
    imgtag.setAttribute('title', 'This may take a while depending on the amount of data it needs to crunch. Please be patient.');
    plotdiv.appendChild(imgtag);
    xmlhttp.send(postdata);
}

    </script>

</head>

<body>
    <!-- ##### Preloader ##### -->
    <div id="preloader">
        <i class="circle-preloader"></i>
    </div>

    <!-- ##### Header Area Start ##### -->
    <header class="header-area">

        <!-- Top Header Area -->
        <div class="top-header">
            <div class="container h-100">
                <div class="row h-100">
                    <div class="col-12 h-100">
                        <div class="top-header-content h-100 d-flex align-items-center justify-content-between">
                            <!-- Top Headline -->
                            <div class="top-headline">
                                <p>Welcome to <span>CryptoCurry</span></p>
                            </div>
                            <!-- Top Login & Faq & Earn Monery btn -->
                            <div class="login-faq-earn-money">
                                <a href="#" onClick='javascript:showloginscreen("{{urlprefix}}");'>Login&nbsp;&nbsp;</a> | <a href="#" onClick='javascript:showregisterscreen("{{urlprefix}}");'>Register<br /></a>
                                <a href="#">FAQ</a>
                                <a href="#" class="active">Trade</a>
				<div id='logindiv' class='semitrans' style='display:none'></div>
				<div id='registerdiv' class='semitrans' style='display:none'></div>
                            </div>
			    <div id='plotnamearea'></div> 
                        </div>
                    </div>
                </div>
            </div>
        </div>


